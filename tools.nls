to move-hw-manager[ hw mng]
  
  let yc 0
  let xc 0
  
  ask homework hw[
    set yc ycor
    set xc xcor
    ]
  
  ask administrator mng [    
    set xcor xc - 1 
    set ycor yc - 1
    ]
  
end


to-report get-task
  
  ;;set tareas [   who ] of one-of homeworks with [enable = 1]
 
  let result one-of homeworks with [enable = 1]
  if result != nobody
  [
    set result [who] of result
  ]
  report result
  
;;  output-show (word "Task to solve:" tareas

end

to-report get-manager
 
   
  let result one-of administrators with [enable = 1]  
  report result
end

to move-hw-group [ hw lista]
  
  let n length lista
  let cnt 0
  let i 0
  let j 0
  let xt 0
  let yt 0
  let mult 1
  let temp 0
  let coord []
  let indices [
      [-1 0] [-1 1] [0 -1] [0 1] [1 -1] [1 0] [1 1]
    ]
  
  ask hw[
    set xt xcor
    set yt ycor
  ]
  
  output-show "Workers to solve the task"
  while[not empty? lista]
  [
    set temp first lista
    
    set lista remove-item 0 lista
    let feat []
    
    if i = 6
    [
      set mult mult + 1
      set i 0
    ]
    
    ask worker temp[
        
        set enable 0
        set coord item i indices
        
        set xcor xt + (first coord ) * mult
        set ycor yt + ( last coord ) * mult
        
        set feat lput tiempoA feat
        set feat lput recursoA feat
        set feat lput competenciaA feat
        set feat lput calidadA feat
         output-show feat
        
      ]
   
    set i i + 1
  ]
  
    
end


to comer-recurso
  let init ticks
  
  ask worker who
  [
   set recurso recurso + 5 
   setxy min-pxcor + random 5 max-pycor - random 5

  ]
  show "comio recursos :3"
  
  ;while[ (init + 1) < ticks]
;  [
    
 ; ]
 ;  move-to one-of patches with [(pcolor = red) and (not any? workers-here)]
   
end

to comer-skills
  
  let init ticks
  
  ask worker who
  [
    set competencia competencia + 5 
    setxy max-pxcor - random 5 max-pycor + random 5
  ]
  show "comio skills"
  
;  while[ (init + 1) < ticks]
;  [
    
;  ]
   move-to one-of patches with [(pcolor = red) and (not any? workers-here)]
  
end

;; seleccionamos una tarea no completada
to-report get_tarea_libre [ asignadas completadas]
  
  let result nobody
  let temp 0
  
  while[ not empty? asignadas]
  [
    set temp first asignadas
    set asignadas remove-item 0 asignadas
    
    if not member? temp completadas
    [
      set result temp
    ]
  ]
;  show result
;  show completadas
  
  report result
end
